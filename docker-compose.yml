version: "3.8"

services:
  client-service:
    build:
      context: ./client-service
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:1234@client-postgres-db:5432/client-service-db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - client-postgres-db
      - redis
      - rabbitmq
    networks:
      - backend-network

  transaction-service:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:1234@transaction-postgres-db:5432/transaction-service-db
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - transaction-postgres-db
      - rabbitmq
    networks:
      - backend-network

  api-gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - client-service
      - transaction-service
    networks:
      - backend-network

  client-postgres-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: client-service-db
    volumes:
      - client-postgres-data:/var/lib/postgresql/data
    networks:
      - backend-network

  transaction-postgres-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: transaction-service-db
    volumes:
      - transaction-postgres-data:/var/lib/postgresql/data
    networks:
      - backend-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  client-postgres-data:
  transaction-postgres-data:
